// Generated by view binder compiler. Do not edit!
package com.ssafy.foregroundservice.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.ssafy.foregroundservice.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityTimerBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView resetImageView;

  @NonNull
  public final RelativeLayout stopwatchLayout;

  @NonNull
  public final TextView stopwatchTextView;

  @NonNull
  public final TextView stopwatchValueTextView;

  @NonNull
  public final MaterialButton toggleButton;

  @NonNull
  public final TextView tvActivitTime;

  @NonNull
  public final TextView tvServiceLivetime;

  private ActivityTimerBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView resetImageView, @NonNull RelativeLayout stopwatchLayout,
      @NonNull TextView stopwatchTextView, @NonNull TextView stopwatchValueTextView,
      @NonNull MaterialButton toggleButton, @NonNull TextView tvActivitTime,
      @NonNull TextView tvServiceLivetime) {
    this.rootView = rootView;
    this.resetImageView = resetImageView;
    this.stopwatchLayout = stopwatchLayout;
    this.stopwatchTextView = stopwatchTextView;
    this.stopwatchValueTextView = stopwatchValueTextView;
    this.toggleButton = toggleButton;
    this.tvActivitTime = tvActivitTime;
    this.tvServiceLivetime = tvServiceLivetime;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityTimerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityTimerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_timer, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityTimerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.reset_image_view;
      ImageView resetImageView = ViewBindings.findChildViewById(rootView, id);
      if (resetImageView == null) {
        break missingId;
      }

      id = R.id.stopwatch_layout;
      RelativeLayout stopwatchLayout = ViewBindings.findChildViewById(rootView, id);
      if (stopwatchLayout == null) {
        break missingId;
      }

      id = R.id.stopwatch_text_view;
      TextView stopwatchTextView = ViewBindings.findChildViewById(rootView, id);
      if (stopwatchTextView == null) {
        break missingId;
      }

      id = R.id.stopwatch_value_text_view;
      TextView stopwatchValueTextView = ViewBindings.findChildViewById(rootView, id);
      if (stopwatchValueTextView == null) {
        break missingId;
      }

      id = R.id.toggle_button;
      MaterialButton toggleButton = ViewBindings.findChildViewById(rootView, id);
      if (toggleButton == null) {
        break missingId;
      }

      id = R.id.tv_activit_time;
      TextView tvActivitTime = ViewBindings.findChildViewById(rootView, id);
      if (tvActivitTime == null) {
        break missingId;
      }

      id = R.id.tv_service_livetime;
      TextView tvServiceLivetime = ViewBindings.findChildViewById(rootView, id);
      if (tvServiceLivetime == null) {
        break missingId;
      }

      return new ActivityTimerBinding((ConstraintLayout) rootView, resetImageView, stopwatchLayout,
          stopwatchTextView, stopwatchValueTextView, toggleButton, tvActivitTime,
          tvServiceLivetime);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
